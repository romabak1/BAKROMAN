{"ast":null,"code":"var _jsxFileName = \"O:\\\\BAKROMAN\\\\client\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true); // стан для відслідковування завантаження даних користувача\n\n  // Функція для оновлення даних користувача після входу\n  const loginUser = async token => {\n    localStorage.setItem('token', token);\n    try {\n      const response = await axios.get('http://localhost:5001/api/user/verifyToken', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.data.isValid) {\n        setUser(response.data.user);\n      } else {\n        logoutUser();\n      }\n    } catch (error) {\n      console.error(\"Помилка при перевірці токену\", error);\n      logoutUser();\n    }\n  };\n\n  // Функція для виходу користувача\n  const logoutUser = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  useEffect(() => {\n    const verifyUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('http://localhost:5001/api/user/verifyToken', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.data.isValid) {\n            setUser(response.data.user);\n          } else {\n            logoutUser();\n          }\n        } catch (error) {\n          console.error(\"Помилка при перевірці токену\", error);\n          logoutUser();\n        }\n      }\n    };\n    verifyUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","isLoading","setIsLoading","loginUser","token","localStorage","setItem","response","get","headers","data","isValid","logoutUser","error","console","removeItem","verifyUser","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["O:/BAKROMAN/client/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true); // стан для відслідковування завантаження даних користувача\r\n\r\n  \r\n  // Функція для оновлення даних користувача після входу\r\n  const loginUser = async (token) => {\r\n    localStorage.setItem('token', token);\r\n    try {\r\n      const response = await axios.get('http://localhost:5001/api/user/verifyToken', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.data.isValid) {\r\n        setUser(response.data.user);\r\n      } else {\r\n        logoutUser();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Помилка при перевірці токену\", error);\r\n      logoutUser();\r\n    }\r\n  };\r\n\r\n  // Функція для виходу користувача\r\n  const logoutUser = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const verifyUser = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('http://localhost:5001/api/user/verifyToken', {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n          });\r\n  \r\n          if (response.data.isValid) {\r\n            setUser(response.data.user);\r\n          } else {\r\n            logoutUser();\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Помилка при перевірці токену\", error);\r\n          logoutUser();\r\n        }\r\n      }\r\n    };\r\n  \r\n    verifyUser();\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser, loginUser, logoutUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAGlD;EACA,MAAMa,SAAS,GAAG,MAAOC,KAAK,IAAK;IACjCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,4CAA4C,EAAE;QAC7EC,OAAO,EAAE;UACP,eAAe,EAAG,UAASL,KAAM;QACnC;MACF,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE;QACzBX,OAAO,CAACO,QAAQ,CAACG,IAAI,CAACX,IAAI,CAAC;MAC7B,CAAC,MAAM;QACLa,UAAU,CAAC,CAAC;MACd;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDD,UAAU,CAAC,CAAC;IACd;EACF,CAAC;;EAED;EACA,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACvBP,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCf,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd,MAAMyB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMZ,KAAK,GAAGC,YAAY,CAACY,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIb,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,4CAA4C,EAAE;YAC7EC,OAAO,EAAE;cACP,eAAe,EAAG,UAASL,KAAM;YACnC;UACF,CAAC,CAAC;UAEF,IAAIG,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE;YACzBX,OAAO,CAACO,QAAQ,CAACG,IAAI,CAACX,IAAI,CAAC;UAC7B,CAAC,MAAM;YACLa,UAAU,CAAC,CAAC;UACd;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;UACpDD,UAAU,CAAC,CAAC;QACd;MACF;IACF,CAAC;IAEDI,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEtB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEC,OAAO;MAAEG,SAAS;MAAES;IAAW,CAAE;IAAAf,QAAA,EACnEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CAhEWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}