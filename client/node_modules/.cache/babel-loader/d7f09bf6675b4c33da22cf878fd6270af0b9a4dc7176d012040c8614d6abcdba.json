{"ast":null,"code":"var _jsxFileName = \"O:\\\\BAKROMAN\\\\client\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Функція для оновлення даних користувача після входу\n  const loginUser = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:5001/api/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        setUser(data.user); // Оновлюємо стан користувача\n      } else {\n        // Обробка помилок логіну\n      }\n    } catch (error) {\n      console.error(\"Не вдалося з'єднатися з сервером.\");\n    }\n  };\n\n  // Функція для виходу користувача\n  const logoutUser = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  useEffect(() => {\n    const verifyUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('http://localhost:5001/api/user/verifyToken', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.data.isValid) {\n            setUser(response.data.user);\n          } else {\n            logoutUser();\n          }\n        } catch (error) {\n          console.error(\"Помилка при перевірці токену\", error);\n          logoutUser();\n        }\n      }\n    };\n    verifyUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","error","console","logoutUser","removeItem","verifyUser","getItem","get","isValid","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["O:/BAKROMAN/client/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n\r\n\r\n\r\n  \r\n  // Функція для оновлення даних користувача після входу\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5001/api/user/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        localStorage.setItem('token', data.token);\r\n        setUser(data.user); // Оновлюємо стан користувача\r\n      } else {\r\n        // Обробка помилок логіну\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Не вдалося з'єднатися з сервером.\");\r\n    }\r\n  };\r\n\r\n  // Функція для виходу користувача\r\n  const logoutUser = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const verifyUser = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('http://localhost:5001/api/user/verifyToken', {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n          });\r\n  \r\n          if (response.data.isValid) {\r\n            setUser(response.data.user);\r\n          } else {\r\n            logoutUser();\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Помилка при перевірці токену\", error);\r\n          logoutUser();\r\n        }\r\n      }\r\n    };\r\n  \r\n    verifyUser();\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser, loginUser, logoutUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAMtC;EACA,MAAMW,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,KAAK,CAAC;QACzChB,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC,MAAM;QACL;MAAA;IAEJ,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAC;IACpD;EACF,CAAC;;EAED;EACA,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCpB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd,MAAM8B,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAML,KAAK,GAAGF,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIN,KAAK,EAAE;QACT,IAAI;UACF,MAAMZ,QAAQ,GAAG,MAAMZ,KAAK,CAAC+B,GAAG,CAAC,4CAA4C,EAAE;YAC7EhB,OAAO,EAAE;cACP,eAAe,EAAG,UAASS,KAAM;YACnC;UACF,CAAC,CAAC;UAEF,IAAIZ,QAAQ,CAACO,IAAI,CAACa,OAAO,EAAE;YACzBxB,OAAO,CAACI,QAAQ,CAACO,IAAI,CAACZ,IAAI,CAAC;UAC7B,CAAC,MAAM;YACLoB,UAAU,CAAC,CAAC;UACd;QACF,CAAC,CAAC,OAAOF,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;UACpDE,UAAU,CAAC,CAAC;QACd;MACF;IACF,CAAC;IAEDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE3B,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAE3B,IAAI;MAAEC,OAAO;MAAEC,SAAS;MAAEkB;IAAW,CAAE;IAAAtB,QAAA,EACnEA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CApEWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}