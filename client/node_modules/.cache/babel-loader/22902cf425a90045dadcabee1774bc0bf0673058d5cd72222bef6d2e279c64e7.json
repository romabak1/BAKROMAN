{"ast":null,"code":"var _jsxFileName = \"O:\\\\BAKROMAN\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport { UserContext } from '../context/UserContext'; // Імпортуємо UserContext для використання контексту користувача\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\"); // Стейт для збереження email користувача\n  const [password, setPassword] = useState(\"\"); // Стейт для збереження паролю користувача\n  const [error, setError] = useState(\"\"); // Стейт для збереження повідомлень про помилки\n  const navigate = useNavigate(); // Хук для навігації між сторінками\n  const {\n    loginUser\n  } = useContext(UserContext); // Витягуємо функцію loginUser із контексту користувача\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Забороняємо стандартну поведінку форми (перезавантаження сторінки)\n    setError(\"\"); // Очищаємо повідомлення про помилки перед відправкою запиту\n    try {\n      const response = await fetch(\"http://localhost:5001/api/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }) // Відправляємо email і пароль на сервер у форматі JSON\n      });\n      const data = await response.json();\n      if (response.ok) {\n        loginUser(data.token); // Викликаємо функцію loginUser для оновлення стану користувача з отриманим токеном\n        navigate(\"/\"); // Перенаправляємо користувача на домашню сторінку\n      } else {\n        setError(data.msg); // Встановлюємо повідомлення про помилку, якщо авторизація не вдалася\n      }\n    } catch (error) {\n      setError(\"Не вдалося з'єднатися з сервером.\"); // Встановлюємо повідомлення про помилку, якщо сталася помилка з'єднання з сервером\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0456\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        id: \"email-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        id: \"passwordinput\",\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"sKjgZcwYEWP1Qm15G9Jxr2vcNmk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useContext","UserContext","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","navigate","loginUser","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","id","required","_c","$RefreshReg$"],"sources":["O:/BAKROMAN/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../context/UserContext'; // Імпортуємо UserContext для використання контексту користувача\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\"); // Стейт для збереження email користувача\r\n  const [password, setPassword] = useState(\"\"); // Стейт для збереження паролю користувача\r\n  const [error, setError] = useState(\"\"); // Стейт для збереження повідомлень про помилки\r\n  const navigate = useNavigate(); // Хук для навігації між сторінками\r\n  const { loginUser } = useContext(UserContext); // Витягуємо функцію loginUser із контексту користувача\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Забороняємо стандартну поведінку форми (перезавантаження сторінки)\r\n    setError(\"\"); // Очищаємо повідомлення про помилки перед відправкою запиту\r\n    try {\r\n      const response = await fetch(\"http://localhost:5001/api/user/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }), // Відправляємо email і пароль на сервер у форматі JSON\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        loginUser(data.token); // Викликаємо функцію loginUser для оновлення стану користувача з отриманим токеном\r\n        navigate(\"/\"); // Перенаправляємо користувача на домашню сторінку\r\n      } else {\r\n        setError(data.msg); // Встановлюємо повідомлення про помилку, якщо авторизація не вдалася\r\n      }\r\n    } catch (error) {\r\n      setError(\"Не вдалося з'єднатися з сервером.\"); // Встановлюємо повідомлення про помилку, якщо сталася помилка з'єднання з сервером\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <h2>Авторизація</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input className=\"inp\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          id=\"email-input\"\r\n          required\r\n        />\r\n        <input className=\"inp\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          id=\"passwordinput\"\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Увійти</button>\r\n      </form>\r\n      {error && <div className=\"error\">{error}</div>} {/* Відображаємо повідомлення про помилку, якщо воно є */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}