{"ast":null,"code":"const FormatDate = dateString => {\n  // Функція FormatDate приймає рядок dateString, який містить дату.\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  // options - це об'єкт, що містить налаштування для форматування дати.\n  // В даному випадку, дата буде виглядати як \"рік, повний місяць, день\".\n\n  // Використовуємо метод toLocaleDateString для форматування дати.\n  return new Date(dateString).toLocaleDateString(undefined, options);\n  // new Date(dateString) - створює об'єкт дати із переданого рядка.\n  // toLocaleDateString - метод, який форматує дату відповідно до заданих параметрів options.\n};\n_c = FormatDate;\nexport default FormatDate;\n// Експортуємо функцію FormatDate для використання її в інших частинах програми.\nvar _c;\n$RefreshReg$(_c, \"FormatDate\");","map":{"version":3,"names":["FormatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","_c","$RefreshReg$"],"sources":["O:/BAKROMAN/client/src/components/FormatDate.js"],"sourcesContent":["const FormatDate = (dateString) => {\r\n    // Функція FormatDate приймає рядок dateString, який містить дату.\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    // options - це об'єкт, що містить налаштування для форматування дати.\r\n    // В даному випадку, дата буде виглядати як \"рік, повний місяць, день\".\r\n  \r\n    // Використовуємо метод toLocaleDateString для форматування дати.\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n    // new Date(dateString) - створює об'єкт дати із переданого рядка.\r\n    // toLocaleDateString - метод, який форматує дату відповідно до заданих параметрів options.\r\n  };\r\n  \r\n  export default FormatDate;\r\n  // Експортуємо функцію FormatDate для використання її в інших частинах програми.\r\n  "],"mappings":"AAAA,MAAMA,UAAU,GAAIC,UAAU,IAAK;EAC/B;EACA,MAAMC,OAAO,GAAG;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAU,CAAC;EAClE;EACA;;EAEA;EACA,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;EAClE;EACA;AACF,CAAC;AAACO,EAAA,GAVET,UAAU;AAYd,eAAeA,UAAU;AACzB;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}